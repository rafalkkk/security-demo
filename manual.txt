S E T U P
=========
cd mydir
git clone https://github.com/rafalkkk/security-demo.git
python -m pip install --upgrade
python -m venv venv
./venv/scripts/activate.ps1
pip install -r ./requirements.txt
python setup.py

0 - SQL Injection demo
======================
python sql-injection-check-password.py
enter user:  ' OR 1=1 OR ''='

1 - Bandit - locally and/or GitHub
==================================
pip install bandit
bandit ./sql-injection-check-password.py
  # B608:hardcoded_sql_expressions
bandit ./app.py
  # B105:hardcoded_password_string
  # B110:try_except_pass
  # B201:flask_debug_true

2 - Bandit - GitHub Actions
===========================
Add file .github/workflows/01-bandit.yaml and commit, analyze the result
Add new workflow using wizard: Bandit >> Actions >> commit >> Security >> Code scanning

3 - CodeQL (GitHub Advanced Security)
=====================================
Add new workflow using wizard: CodeQL >> Actions >> commit >> Security >> Code scanning
https://docs.github.com/en/get-started/learning-about-github/about-github-advanced-security

4 - Flake8 - linting
====================
Add file 04-flake8.yaml
Commit
Observe results

5 - Pylint - linting
====================
Add new workflow using wizard: commit >> analyze errors
https://pylint.readthedocs.io/en/stable/user_guide/messages/messages_overview.html

6 - SQLFLUFF - SQL linting
==========================
Linting for SQL - no results
https://sqlfluff.com/